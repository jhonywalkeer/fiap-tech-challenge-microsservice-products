name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout o repositório
      - uses: actions/checkout@v2

      # Configuração do Node.js
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      # Cache de dependências
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      # Instalar dependências
      - name: Install Dependencies
        run: npm ci

      # Rodar o build
      - name: Build
        run: npm run build

      # Rodar os testes
      - name: Test
        run: npm run test

      # Análise do SonarCloud
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.host.url=https://sonarcloud.io

      # Login na AWS
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Fazer build da imagem Docker
      - name: Build Docker image
        run: |
          docker build -t meu-repositorio:latest .

      # Login no Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Publicar a imagem no ECR
      - name: Push Docker image to ECR
        run: |
          IMAGE_URI=$(aws ecr describe-repositories --repository-names meu-repositorio | jq -r '.repositories[0].repositoryUri')
          docker tag meu-repositorio:latest $IMAGE_URI:latest
          docker push $IMAGE_URI:latest
